# Configuration for Fluorescence Analysis Pipeline

preprocessing:
  correction_method: "polynomial_detrend"   # New method based on MATLAB implementation
  first_degree: 1                          # Linear for first stage
  second_degree: 3                         # Cubic for second stage
  polynomial_order: 3                      # 1 = linear detrend, >1 = nth-degree polynomial detrend
  smoothing_sigma: 2.0                     # Gaussian smoothing sigma
  use_gpu: false                           # Use GPU acceleration if available
  apply_cnmf: false                        # Don't apply CNMF after correction
  roi_detrend_degree: 1                    # Polynomial degree for ROI-specific detrending
  generate_plot: true                      # generate plot
  save_corrected_data: false               # Whether to save the corrected data to disk
  save_intermediate_traces: true          # Save intermediate traces during preprocessing steps
  trace_save_format: "csv"
 
  # Background removal options
  background_removal:
    enabled: false
    method: "uniform"
    window_size: 7
  
  # Denoising options
  denoise:
    enabled: true
    method: "gaussian"
    params:
      ksize: [5, 5]
      sigmaX: 1.5
  
  # Keep original parameters in case you want to switch back to other methods
  cutoff_freq: 0.001                       # For lowpass_filter method
  temporal_filter_order: 2                 # For lowpass_filter method
  spatial_hp_sigma: 2.0                    # For lowpass_filter method
  median_filter_size: 3                    # For noise reduction
  use_roi_masks: true                      # Use ROI masks for CNMF-E initialization
  
  # CNMF-E specific parameters
  cnmf_e:
    min_corr: 0.8                         # Minimum correlation for component detection
    min_pnr: 10                           # Minimum peak-to-noise ratio
    gSig: [3, 3]                          # Expected half-size of neurons
    ring_size_factor: 1.4                 # Factor to enlarge ring for background estimation
    merge_thresh: 0.7                     # Merging threshold for components

roi_processing:
  # Processing step control
  steps:
    extract_rois: true              # Extract ROIs from zip file
    roi_specific_detrend: true     # Apply ROI-specific detrending 
    save_masks: true                # Save ROI masks as visualizations
    refine_rois: false              # Refine ROIs with CNMF-E
    refine_with_pnr: false         # Refine ROIs using PNR analysis
    subtract_background: true      # Perform background subtraction
  save_intermediate_traces: true
  trace_save_format: "csv"
  
  # PNR refinement settings
  pnr_refinement:
    noise_freq_cutoff: 0.5                # Cutoff frequency for signal/noise separation
    min_pnr: 8.0                          # Minimum peak-to-noise ratio to keep an ROI
    percentile_threshold: 99              # Percentile to use for peak detection
    trace_smoothing: 0                    # Window size for smoothing signal traces (0 to disable)
    auto_determine: false                 # Auto-determine optimal frequency cutoff
    generate_plots: true                  # Generate diagnostic plots for signal/noise separation

  # Optimization settings
  optimization:
    spatial_downsample: 2                 # Downsample spatially by 2x (adjust as needed)
    use_float16: true                     # Use float16 instead of float32 
    simplified_mode: true                 # Use simplified/faster processing
  
  # CNMF-E parameters for ROI refinement
  cnmf_e:
    min_corr: 0.8                         # Minimum correlation
    min_pnr: 10                           # Minimum peak-to-noise ratio
    gSig: [3, 3]                          # Expected half-size of neurons
    gSiz: [7, 7]                          # Full size of neuron bounding box (or leave blank for auto)
    ring_size_factor: 1.4                 # Factor to determine ring size
    merge_thresh: 0.7                     # Threshold for merging components
  
  # Use multiple processes for CNMF-E computation
  use_multiprocessing: true
  n_processes: 4                          # Number of processes to use
  
  # Background subtraction parameters
  background:
    method: "darkest_pixels"    # Options: darkest_pixels, roi_periphery, global_background, cnmf_background, lowpass_filter
    min_background_area: 200       # Minimum pixel size for background region
    background_dilation: 2         # Dilation of ROI masks to avoid using pixels close to ROIs
    periphery_size: 2              # Size of ROI periphery for local background
    percentile: 0.5                # For darkest_pixels method
    median_filter_size: 3          # For pixel noise reduction
    dilation_size: 2               # For expanding background mask
    cutoff_freq: 0.001             # For lowpass_filter method
    filter_order: 2                # For lowpass_filter method

analysis:
  frame_rate: 1.67                         # Acquisition frame rate in Hz
  
  # UPDATED: Use a broader analysis window to catch more activity
  baseline_frames: [0, 100]                # Range of frames to use for baseline calculation
  analysis_frames: [100, 600]              # MODIFIED: Broader range to capture more potential activity
  
  # Baseline calculation parameters
  baseline_method: "percentile"            # Options: "percentile", "mean", "min"
  baseline_percentile: 8                   # Percentile to use when baseline_method is "percentile"
  baseline_n_frames: 10                    # Number of frames to use when baseline_method is "mean"
  
  # UPDATED: Activity threshold parameter - SIGNIFICANTLY lowered
  active_threshold: 0.02                   # Reduced threshold for determining if an ROI is active
  
  # UPDATED: Peak detection parameters with increased sensitivity
  peak_detection:
    prominence: 0.03                       # Reduced prominence for more sensitive detection, reduced from 0.03
    width: 2                               # Reduced minimum width to catch narrower peaks
    # ADDED: Additional scipy.signal.find_peaks parameters
    distance: 10                           # Minimum samples between peaks
    height: 0.02                           # Minimum height above baseline to be considered a peak
    rel_height: 0.5                        # Relative height from peak to calculate width
  
  # Spontaneous activity parameters
  spontaneous_activity:
    prominence: 0.03                       # Lower threshold for spontaneous activity detection
    width: 2                               # Minimum peak width for spontaneous activity
  
  save_intermediate_traces: true
  trace_save_format: "csv"
  
  event_detection:
    threshold: 0.5                         # Standard deviations above baseline
    min_duration: 2                        # Minimum event duration in frames
    baseline_percentile: 10                # Percentile to use for baseline estimation
  
  # Quality control thresholds
  qc_thresholds:
    min_snr: 1.5                           # Minimum signal-to-noise ratio
    max_baseline_var: 15.0                 # Maximum baseline variance (%)
    min_event_count: 1                     # Minimum events per minute
    max_motion_correlation: 0.6            # Maximum correlation with motion trace

visualization:
  roi_color_map: "viridis"                 # Colormap for ROI visualization
  trace_color: "#1f77b4"                   # Color for fluorescence traces
  event_color: "#d62728"                   # Color for detected events
  save_individual_plots: true              # Save individual ROI plots
  save_summary_plots: true                 # Save summary plots
  plot_types:                              # Plot types to generate
    - "roi_map"                            # ROI spatial map
    - "trace_overlay"                      # All traces overlaid
    - "event_summary"                      # Event rate summary
    - "quality_metrics"                    # Quality control metrics

advanced_analysis:
  enabled: false                           # Enable advanced analysis
  methods:
    - "correlation"                        # ROI correlation analysis
    - "clustering"                         # Hierarchical clustering of ROIs
    - "population_activity"                # Population activity analysis